mutate(prevalence = frequency * infected ) %>%
ggplot(aes(x = simTime, y = prevalence, group = antigentype, col = antigentype)) +
geom_line(size = 1.2) + guides(col = FALSE)
antigenFrequencies %>%
filter(antigentype %in% successful.types) %>%
mutate(prevalence = frequency * infected ) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack')
antigenFrequencies %>%
filter(antigentype %in% successful.types) %>%
mutate(prevalence = frequency * infected ) -> antigenFrequencies.successful
head(antigenFrequencies.successful)
head(antigenFrequencies.successful)
spread(antigenFrequencies.successful,key = antigentype, value = infected, fill = NA)
View(antigenFrequencies)
View(antigenFrequencies.successful)
duplicated(antigenFrequencies.successful)
duplicated.rows = duplicated(antigenFrequencies.successful)
spread(!duplicated(antigenFrequencies.successful),key = antigentype, value = infected, fill = NA)
!duplicated(antigenFrequencies.successful)
antigenFrequencies.successful = antigenFrequencies.successful[!duplicated(antigenFrequencies.successful),]
spread(antigenFrequencies.successful,key = antigentype, value = infected, fill = NA)
antigenFrequencies.wide = spread(antigenFrequencies.successful,key = antigentype, value = infected, fill = NA)
head(antigenFrequencies.wide)
which(antigenFrequencies.wide$`0` != 'NA')
View(antigenFrequencies.wide)
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = NA)
View(antigenFrequencies.wide)
antigenFrequencies %>%
filter(antigentype %in% successful.types) -> antigenFrequencies.successful
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = NA)
antigenFrequencies.successful = antigenFrequencies.successful[!duplicated(antigenFrequencies.successful),]
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = NA)
View(antigenFrequencies.wide)
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = 0)
View(antigenFrequencies.wide)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) %>%
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack')
str(antigenFrequencies.wide)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
str()
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
as.factor(antigentype)
antigenFrequencies.successful$antigentype = as.factor(antigenFrequencies.successful$antigentype)
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = 0)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
str()
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) %>%
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack')
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack')
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(col = FALSE)
myColors.short <- brewer.pal(n = 5, "Accent")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Frequency", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE) +
scale_color_manual(values = myColors.short) +
scale_fill_manual(values = myColors.short) +
labs(y = "Frequency", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors.short) +
scale_fill_manual(values = myColors.short) +
labs(y = "Frequency", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
head()
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
mutate(prevalence = frequency * infected) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors.short) +
scale_fill_manual(values = myColors.short) +
labs(y = "Frequency", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
mutate(prevalence = frequency * infected) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors.short) +
scale_fill_manual(values = myColors.short) +
labs(y = "Infected Individuals", x = "Years") -> successful.infecteds.plot
successful.types = find.successful.types(antigenFrequencies, threshold = .05)
successful.types
antigenFrequencies %>%
filter(antigentype %in% successful.types) -> antigenFrequencies.successful
antigenFrequencies.successful = antigenFrequencies.successful[!duplicated(antigenFrequencies.successful),]
antigenFrequencies.successful$antigentype = as.factor(antigenFrequencies.successful$antigentype)
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = 0)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
mutate(prevalence = frequency * infected) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors.short) +
scale_fill_manual(values = myColors.short) +
labs(y = "Infected Individuals", x = "Years")
myColors <- colorRampPalette(brewer.pal(8, "Accent"))(12)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:9) %>%
mutate(prevalence = frequency * infected) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Infected Individuals", x = "Years")
successful.types
antigenFrequencies %>%
filter(antigentype %in% successful.types) -> antigenFrequencies.successful
head(antigenFrequencies.succesful)
head(antigenFrequencies.successful)
str(antigenFrequencies.successful)
antigenFrequencies.successful = antigenFrequencies.successful[!duplicated(antigenFrequencies.successful),]
levels(antigenFrequencies.successful$antigentype)
str(antigenFrequencies.successful$antigentype)
antigenFrequencies.successful$antigentype = as.factor(antigenFrequencies.successful$antigentype)
str(antigenFrequencies.successful$antigentype)
antigenFrequencies.successful = antigenFrequencies.successful[!duplicated(antigenFrequencies.successful),]
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = 0)
View(antigenFrequencies.wide)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:ncol(antigenFrequencies.wide)) %>%
mutate(prevalence = frequency * infected) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Infected Individuals", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:ncol(antigenFrequencies.wide)) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
analysis.dir <- "~/Documents/projects/fluantigen/04-03-2017_12-18-26/"
timeseries  = read.table(paste0(analysis.dir, "/out.timeseries.txt"), header = TRUE)
head(timeseries)
timeseries %>%
gather(key = metric, value = value, - date) %>%
head()
timeseries %>%
gather(key = metric, value = value, - date) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric)
timeseries %>%
gather(key = metric, value = value, - date) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
desired.metrics = c("northI", "antigenicDiversity", "northTmrca", "diversity")
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
analysis.dir <- "~/Documents/projects/fluantigen/04-03-2017_12-32-14/"
timeseries  = read.table(paste0(analysis.dir, "/out.timeseries.txt"), header = TRUE)
desired.metrics = c("northI", "antigenicDiversity", "northTmrca", "diversity")
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
library(plyr)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(scales)
library(reshape2)
library(data.table)
library(RColorBrewer)
analysis.dir <- "~/Dropbox/Projects/mutantigen/04-04-2017_09-20-07/"
timeseries  = read.table(paste0(analysis.dir, "/out.timeseries.txt"), header = TRUE)
desired.metrics = c("northI", "antigenicDiversity", "northTmrca", "diversity")
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
library(phylotate)
tree<- read_annotated(filename = paste0(analysis.dir,"/out.trees.txt"), format = "newick")
plot(tree, type = "phylogram", show.tip.label = FALSE)
paste0(analysis.dir,"/out.trees.txt")
tree <- read_annotated(filename = paste0(analysis.dir,"out.trees.txt"), format = "newick")
plot(tree, show.tip.label = FALSE)
library(aple)
library(ape)
plot(tree, show.tip.label = FALSE)
antigenFrequencies = read.table(paste0(analysis.dir, "out.timeseries.txt"), header = TRUE)
head(antigenFrequencies)
antigenFrequencies = read.table(paste0(analysis.dir, "out.antigenFrequencies.txt"), header = TRUE)
head(antigenFrequencies)
antigenFrequencies$antigentype = as.factor(antigenFrequencies$antigentype)
antigenFrequencies %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
filter(max.freq > .1) -> successful.mutants
successful.mutants
successful.mutants.id = successful.mutants$antigentype
myColors <- colorRampPalette(brewer.pal(8, "Accent"))(length(successful.mutants.id))
antigenFrequencies %>%
filter(antigentype %in% successful.mutants.id) %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line(size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Frequency", x = "Years")
antigenFrequencies %>%
filter(antigentype %in% successful.mutants.id) %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line(size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
successful.types
successful.types = find.successful.types(antigenFrequencies, threshold = .05)
successful.types
successful.mutants.id
successful.types = find.successful.types(antigenFrequencies, threshold = .1)
successful.mutants.id
successful.types
antigenFrequencies %>%
filter(antigentype %in% successful.types) -> antigenFrequencies.successful
antigenFrequencies.successful$antigentype = as.factor(antigenFrequencies.successful$antigentype)
antigenFrequencies.successful = antigenFrequencies.successful[!duplicated(antigenFrequencies.successful),]
antigenFrequencies.wide = spread(antigenFrequencies.successful, key = antigentype, value = frequency, fill = 0)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:ncol(antigenFrequencies.wide)) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
head(antigenFrequencies.successful)
length(successful.types)
head(antigenFrequencies.wide)
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 4:ncol(antigenFrequencies.wide)) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 4:ncol(antigenFrequencies.wide)) %>%
mutate(prevalence = frequency * infected) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Infected Individuals", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 4:ncol(antigenFrequencies.wide)) %>%
mutate(prevalence = frequency * infected) %>%
ggplot(aes(x = simTime, y = prevalence, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
# guides(fill = FALSE, color = FALSE) +
guides(fill = guide_legend(reverse=TRUE))
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Infected Individuals", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 5:ncol(antigenFrequencies.wide)) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = guide_legend(reverse=TRUE))
# guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
antigenFrequencies.wide %>%
gather(key = antigentype, value = frequency, 4:ncol(antigenFrequencies.wide)) %>%
ggplot(aes(x = simTime, y = frequency, col = antigentype)) +
geom_area(aes(color = antigentype, fill = antigentype), position = 'stack') +
guides(fill = guide_legend(reverse=TRUE))
# guides(fill = FALSE, color = FALSE) +
scale_color_manual(values = myColors) +
scale_fill_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
head(timeseries)
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
desired.metrics = c("northI", "antigenicDiversity", "northTmrca", "diversity")
timeseries  = read.table(paste0(analysis.dir, "/out.timeseries.txt"), header = TRUE)
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics )
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line()
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
head(timeseries)
antigenFrequencies %>%
filter(antigentype %in% successful.mutants.id) %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line(size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
myColors
antigenFrequencies %>%
filter(antigentype %in% successful.mutants.id) %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line(size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
timeseries %>%
gather(key = metric, value = value, - date) %>%
filter(metric %in% desired.metrics ) %>%
ggplot(aes(x = date, y = value)) + geom_line() +
facet_wrap(~metric, scales = "free")
timeseries %>%
gather(key = metric, value = value, -date) %>%
filter(metric == "northTmrca") -> tmrca
head(tmrca)
which(tmrca$value == "Infinity")
northTmrca
tmrca
View(tmrca)
View(timeseries)
viral.fitness = read.table(paste0(analysis.dir, "ouit.viralFitnessSeries.txt"), header = TRUE)
viral.fitness = read.table(paste0(analysis.dir, "out.viralFitnessSeries.txt"), header = TRUE)
head(viral.fitness)
ir, "out.viralFitnessSeries.txt"), header = TRUE)
viral.fitness %>%
gather(key = metric, value = value, -date)
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value))
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
str()
head(viral.fitness)
metric.mean = c("meanR" "varR")
metric.beta = c("meanBeta", "varBeta")
metric.Sigma = c("meanSigma", "varSigma"
metric.beta = c("meanBeta", "varBeta")
metric.Sigma = c("meanSigma", "varSigma")
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) -> viral.fitness.mean
metric.mean = c("meanR" "varR")
metric.beta = c("meanBeta", "varBeta")
metric.Sigma = c("meanSigma", "varSigma")
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) -> viral.fitness.mean
metric.mean = c("meanR", "varR")
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) -> viral.fitness.mean
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.beta) -> viral.fitness.beta
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.Sigma) -> viral.fitness.sigma
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
spread(key = metric, value = value) -> viral.fitness.mean
View(viral.fitness.mean)
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean)
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
spread(key = metric, value = value.exp)
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean)
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
spread(key = date, value = metric) -> viral.fitness.mean
View(viral.fitness.mean)
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
head()
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
spread(key = metric, value = value.exp) %>%
head()
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
spread(key = metric, value = value.exp, -value) %>%
head()
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
select(date, metric, value.exp) %>%
head()
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
select(date, metric, value.exp) %>%
spread(key = metric, value = value.exp) %>%
head()
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
select(date, metric, value.exp) %>%
spread(key = metric, value = value.exp) -> viral.fitness.mean
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.beta) %>%
select(date, metric, value.exp) %>%
spread(key = metric, value = value.exp) -> viral.fitness.beta
metric.sigma = c("meanSigma", "varSigma")
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.sigma) %>%
select(date, metric, value.exp) %>%
spread(key = metric, value = value.exp) -> viral.fitness.sigma
head(viral.fitness.sigma)
viral.fitness.beta %>%
ggplot(aes(x = date, y = meanBeta)) + geom_line()
viral.fitness.beta %>%
ggplot() + geom_ribbon(aes(ymin = meanBeta-varBeta, ymax = meanBeta + varBeta), fill = "lightblue") +
geom_line(aes(y = meanBeta))
viral.fitness.beta %>%
ggplot() + geom_ribbon(aes(x = date, ymin = meanBeta-varBeta, ymax = meanBeta + varBeta), fill = "lightblue") +
geom_line(aes(y = meanBeta))
viral.fitness.beta %>%
ggplot(aes(x = date, y = meanBeta)) + geom_ribbon(aes(ymin = meanBeta-varBeta, ymax = meanBeta + varBeta), fill = "lightblue") +
geom_line(aes(y = meanBeta))
viral.fitness %>%
gather(key = metric, value = value, -date) %>%
mutate(value.exp = exp(value)) %>%
filter(metric %in% metric.mean) %>%
select(date, metric, value.exp) %>%
spread(key = metric, value = value.exp) %>%
ggplot(aes(x = date, y = meanR)) + geom_line()
head(timeseries)
timeseries %>%
mutate(prevalence = totalI/10000) %>%
ggplot(aes(x = date, y = prevalence)) + geom_line()
