group_by(.id, antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50)+
facet_wrap(~.id, scales = c("free")) +
labs(x = "Maximum Frequency of Antigen")
population.antigenFrequencies %>%
group_by(.id, antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50)+
facet_wrap(~.id, scales = c("free")) +
labs(x = "Maximum Frequency of Antigen") -> antigen.histogram
save_plot(filename = "antigen.histogram.pdf", plot = antigen.histogram, base_height = 8)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50) +
scale_y_continuous(limits = c(0, 500))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50) +
coord_cartesian(ylim = c(0, 500))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50) +
scale_y_continuous(limits = c(0, 500))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50) +
scale_y_continuous(limits = c(0, 100))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50) +
coord_cartesian(ylim = c(0,100))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50) +
coord_cartesian(ylim = c(0,100)) +
scale_x_continuous(breaks = seq(0, 1, .1))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50) +
coord_cartesian(ylim = c(0,100)) +
scale_x_continuous(breaks = seq(0, 1, .1)) -> zoomed.10_6
save_plot(filename = "antigen.histogram", plot = zoomed.10_6)
save_plot(filename = "antigen.histogram.pdf", plot = zoomed.10_6)
population.antigenFrequencies %>%
group_by(.id, antigentype) %>%
summarize(max.freq = max(frequency)) %>%
ggplot(aes(max.freq)) + geom_histogram(bins = 50)+
facet_wrap(~.id, scales = c("free")) +
labs(x = "Maximum Frequency of Antigen") -> antigen.histogram
save_plot(filename = "antigen.histogram.pdf", plot = antigen.histogram, base_height = 8)
save_plot(filename = "antigen.histogram106.pdf", plot = zoomed.10_6)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
head()
population.timeseries %>%
filter(.id == "ten_sixth") %>%
head()
population.timeseries %>%
filter(.id == "ten_sixth") %>%
mutate(prevalence = totalI/100,000) %>%
ggplot(aes(x = date, y = prevalence)) + geom_line()
population.timeseries %>%
filter(.id == "ten_sixth") %>%
mutate(prevalence = totalI/100,000) %>%
ggplot(aes(x = date, y = tmra)) + geom_line()
population.timeseries %>%
filter(.id == "ten_sixth") %>%
mutate(prevalence = totalI/100,000) %>%
ggplot(aes(x = date, y = tmrca)) + geom_line()
head(population.antigenFrequencies)
antigenFrequencies.plot
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
head()
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, gorup = antigentype, col = antigentype)) +
geom_area() + guides(col = FALSE) +
scale_color_manual(values = myColors)
that are 10 and then
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, gorup = antigentype, col = antigentype)) +
geom_ribbon() + guides(col = FALSE) +
scale_color_manual(values = myColors)
e 10 and then
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(day/10 == 0)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, gorup = antigentype, col = antigentype)) +
geom_area(position = 'stack') + guides(col = FALSE) +
scale_color_manual(values = myColors)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_area(position = 'stack') + guides(col = FALSE) +
scale_color_manual(values = myColors)
library(plyr)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(scales)
library(reshape2)
library(data.table)
library(RColorBrewer)
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
population.list
population.list = list.dirs(analysis.dir, full.names = FALSE, recursive = FALSE)
population.timeseries <- lapply(population.list, function(.file) {
out.timeseries <- read.table(paste0(analysis.dir,.file, "/out.timeseries.txt"), header = TRUE)
out.timeseries
})
names(population.timeseries) = population.list
population.timeseries = rbindlist(population.timeseries, idcol = TRUE)
population.timeseries
population.antigenFrequencies <- lapply(population.list, function(.file) {
out.timeseries <- read.table(paste0(analysis.dir,.file, "/out.antigenFrequencies.txt"), header = TRUE)
out.timeseries
})
names(population.antigenFrequencies) = population.list
population.antigenFrequencies = rbindlist(population.antigenFrequencies, idcol = TRUE)
population.antigenFrequencies$antigentype = as.factor(population.antigenFrequencies$antigentype)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency))
myColors <- colorRampPalette(brewer.pal(8, "Accent"))(3321)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_area(position = 'stack') + guides(col = FALSE) +
scale_color_manual(values = myColors)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_bar(position = 'stack') + guides(col = FALSE) +
scale_color_manual(values = myColors)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
ggeom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
xtract days that are 10 and then
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter((day %% 10 == 0)) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Individuals Infected", x = "Years") -> individuals.infected.plot
population.timeseries <- lapply(population.list, function(.file) {
out.timeseries <- read.table(paste0(analysis.dir,.file, "/out.timeseries.txt"), header = TRUE)
out.timeseries
})
names(population.timeseries) = population.list
population.timeseries = rbindlist(population.timeseries, idcol = TRUE)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years") -> antigenFrequencies.plot
plot_grid(antigenFrequencies.plot, individuals.infected.plot, ncol = 1)
myColors <- colorRampPalette(brewer.pal(8, "Accent"))(3321)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency))
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
filter(max.freq > .1)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
filter(max.freq > .1) -> successful.mutants
successful.mutants.id = successful.mutants$antigentype
myColors.short <- brewer.pal(n = 7, "Accent")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id)
successful.mutants.id = successful.mutants$antigentype
successful.mutants.id
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors) +
labs(y = "Frequency", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Frequency", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_line() + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence, group = antigentype, col = antigentype)) +
geom_area() + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years") -> individuals.infected.plot.successful
individuals.infected.plot.successful
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_area(aes(color = antigentype, fill = antigentype)) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_line(aes(color = antigentype, fill = antigentype)) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years") -> individuals.infected.plot.successful
individuals.infected.plot.successful
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_line(aes(color = antigentype, fill = antigentype, size = 2)) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_line(aes(color = antigentype, fill = antigentype, size = 1.5)) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years") -> individuals.infected.plot.successful
individuals.infected.plot.successful
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_line(aes(color = antigentype, fill = antigentype, size = 1.5)) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_line(aes(color = antigentype, fill = antigentype, size = 1.2)) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_line(aes(color = antigentype, fill = antigentype), size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years") -> individuals.infected.plot.successful
individuals.infected.plot.successful
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
ggplot(aes(x = simTime, y = frequency, group = antigentype, col = antigentype)) +
geom_line(size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Frequency", x = "Years") -> frequency.short
plot_grid(individuals.infected.plot.successful, frequency.short)
plot_grid(individuals.infected.plot.successful, frequency.short, ncol = 1)
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_area(aes(fill = antigen.prevalence), state = "identity", position = "stack") +
#geom_line(aes(color = antigentype, fill = antigentype), size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_area(aes(fill = antigen.prevalence), stat = "identity", position = "stack") +
#geom_line(aes(color = antigentype, fill = antigentype), size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_area(aes(fill = antigentype), stat = "identity", position = "stack") +
#geom_line(aes(color = antigentype, fill = antigentype), size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years") -> individuals.infected.plot.successful
individuals.infected.plot.successful
population.antigenFrequencies %>%
filter(.id == "ten_sixth") %>%
filter(antigentype %in% successful.mutants.id) %>%
mutate(antigen.prevalence = round(frequency * infected)) %>%
ggplot(aes(x = simTime, y = antigen.prevalence)) +
geom_area(aes(fill = antigentype), stat = "identity", position = "stack", na.rm = TRUE) +
#geom_line(aes(color = antigentype, fill = antigentype), size = 1.2) + guides(col = FALSE) +
scale_color_manual(values = myColors.short) +
labs(y = "Individuals Infected", x = "Years")
individuals.infected.plot.successful
figure.dir <- "exploratory.figs/"
population.list = list.dirs(analysis.dir, full.names = FALSE, recursive = FALSE)
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test"
population.list = list.dirs(analysis.dir, full.names = FALSE, recursive = FALSE)
population.antigenFrequencies <- lapply(population.list, function(.file) {
out.timeseries <- read.table(paste0(analysis.dir,.file, "/out.antigenFrequencies.txt"), header = TRUE)
out.timeseries
})
ure out the antigen types that were successful
population.antigenFrequencies <- lapply(population.list, function(.file) {
output.file <- read.table(paste0(analysis.dir,.file, "/out.antigenFrequencies.txt"), header = TRUE)
output.file
})
analysis.dir
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
population.antigenFrequencies <- lapply(population.list, function(.file) {
output.file <- read.table(paste0(analysis.dir,.file, "/out.antigenFrequencies.txt"), header = TRUE)
output.file
})
names(population.antigenFrequencies) = population.list
population.antigenFrequencies = rbindlist(population.antigenFrequencies, idcol = TRUE)
read.outputfiles <- function(dir, type ) {
file.list = list.dirs(dir, full.names = FALSE, recursive = FALSE)
population.data <- lapply(file.list, function(.file) {
output.file <- read.table(paste0(analysis.dir,.file, type), header = TRUE)
output.file
})
names(population.data) = file.list
population.data = rbindlist(population.data, idcol = TRUE)
}
read.outputfiles <- function(dir, type ) {
file.list = list.dirs(dir, full.names = FALSE, recursive = FALSE)
population.data <- lapply(file.list, function(.file) {
output.file <- read.table(paste0(analysis.dir,.file, type), header = TRUE)
output.file
})
names(population.data) = file.list
population.data = rbindlist(population.data, idcol = TRUE)
return(population.data)
}
antigenFrequencies = read.outputfiles(analysis.dir, type = "/out.antigenFrequencies.txt")
head(antigenFrequencies)
antigenFrequencies$antigentype = as.factor(antigenFrequencies$antigentype)
antigenFrequencies %>%
filter(.id == "ten_sixth") -> antigenFrequencies
find.successful.types <- function(frequencies, threshold) {
frequencies %>%
group_by(antigentype) %>%
summarize(max.freq = max(frequency)) %>%
filter(max.freq > threshold) -> successful.types
successful.types.id = successful.types$antigentype
return(successful.types.id)
}
succesful.types = find.successful.types(antigenFrequencies, threshold = .1)
successful.types
succesful.types
remove(succsful.types)
remove(succesful.types)
successful.types = find.successful.types(antigenFrequencies, threshold = .1)
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
analysis.dir <- "~/Dropbox/Projects/mutantigen/population_test/"
figure.dir <- "exploratory.figs/"
antigenFrequencies = read.outputfiles(analysis.dir, type = "/out.antigenFrequencies.txt")
antigenFrequencies$antigentype = as.factor(antigenFrequencies$antigentype)
antigenFrequencies %>%
filter(.id == "ten_sixth2") -> antigenFrequencies
successful.types = find.successful.types(antigenFrequencies, threshold = .1)
successful.types
antigen.emergence <- read.outputfiles(analysis.dir, type = "/out.console.txt")
console <- read.table("~/Dropbox/Projects/mutantigen/population_test/ten_sixth2/out.console.txt", header = TRUE)
console <- read.table("~/Dropbox/Projects/mutantigen/population_test/ten_sixth2/out.console.txt", header = TRUE)
View(console)
antigen.emergence <- read.outputfiles(analysis.dir, type = "/out.console.txt")
analysis.dir
antigen.emergence <- read.table("~/Dropbox/Projects/mutantigen/population_test/ten_sixth2/out.console.txt", header = TRUE)
head(antigen.emergence)
antigen.emergenece %>%
filter(postAntigen %in%) successful.types
antigen.emergenece %>%
filter(postAntigen %in% successful.types)
antigen.emergence %>%
filter(postAntigen %in% successful.types)
antigen.emergence %>%
filter(match(postAntigen %in% successful.types))
antigen.emergence %>%
filter(match(postAntigen, successful.types))
antigen.emergence %>%
filter(match(postAntigen, successful.types)) %>%
match(postAntigen, successful.types)
antigen.emergence %>%
filter(match(postAntigen, successful.types)) %>%
match(postAntigen, successful.types)
antigen.emergence %>%
filter(postAntigen %in% successful.types))
antigen.emergence %>%
filter(postAntigen %in% successful.types)
antigen.emergence %>%
filter(which(postAntigen %in% successful.types)[1])
antigen.emergence %>%
filter(which(postAntigen %in% successful.types)[1]) %>%
which(antigen.emergence$postAntigen %in% successful.types)
antigen.emergence %>%
filter(postAntigen %in% successful.types) %>%
mutate(!duplicated(postAntigen))
antigen.emergence %>%
filter
antigen.emergence %>%
filter(postAntigen %in% successful.types) %>%
mutate(occurrence = !duplicated(postAntigen))
antigen.emergence %>%
filter(postAntigen %in% successful.types) %>%
mutate(occurrence = !duplicated(postAntigen)) %>%
filter(occurrence == "TRUE")
antigen.emergence %>%
filter(postAntigen %in% successful.types) %>%
mutate(occurrence = !duplicated(postAntigen)) %>%
filter(occurrence == "TRUE") -> parent.of.successful
parents = parent.of.successful$oriAntigen
successful.types
antigen.emergence %>%
filter(oriAntigen %in% parents) %>%
filter(oriAntigen == postAntigen)
antigen.emergence %>%
filter(oriAntigen %in% parents) %>%
filter(oriAntigen == postAntigen) %>%
group_by(oriAntigen) %>%
summarize(previous.mutations = length(distance))
